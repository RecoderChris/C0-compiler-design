const int cst_int1=00123,cst_int2=+00124,cst_int3=-000125;
const char cst_ch1='_',cst_ch2='+',cst_ch3='7';
const int cst_int5=-0;

int x,y,z;
int arr_x[100],arr_y[100],arr_z[100],xx,yy,zz;
char ch1,ch2,ch3;
char ch4;
char ch5,arr_ch6[100],arr_ch7[100];


char func1(int x,int y,int z)
{

     return (cst_ch3);
	 printf("return in func1 is wrong!");

}
int func2(int x)
{
	printf("now the code is printing in_func2_x!",x);
	scanf(x);
	scanf(z);
	return (x + z - x);
	printf("return in func2 is wrong!");

}
char func3(char ch3)
{
	printf("now the code is printing in_func2_x!",ch3);
	scanf(ch3);
	return (ch3);
	printf("return in func3 is wrong!");

}
void proc1
{
	const int cst_proc1 = 1;
	char ch_proc1;
	ch_proc1 = cst_ch1;
	printf("now the proc1 is printing ch_proc1!",ch_proc1);
	return ;
	printf("return in proc1 is wrong!");

}

void proc2(char ch1,char ch2,char ch3)
{
	printf("now the proc2 is printing ch1!",ch1);
	printf("now the proc2 is printing ch2!",ch2);
	printf("now the proc2 is printing ch3!",ch3);
	return ;
	printf("return in proc2 is wrong!");

}
int fabnac(int x)
{
	int now;
	;
	if  (x <= 2) 
		return (1);
	else
	{
		now = fabnac(x-1) + fabnac(x - 2);
		return (now);
	}
}
void switch_cas(int z)
{
	switch(z+1)
	{
		case 3:
			{ 
				printf("case 1,2,3,4,5",z);
				z = 5;
			}
		case 6:
			{
				printf("case 6,7,8,9,10",z);
				z = 10;
			}
		default: ;
	}
	if(z == 1 )
	{
		printf("if else z=1.",z);
		z = 2;
	}
	else
	if( z<=2)
	{
		printf("if else z=2.",z);
		z = 3;
	}
	else
	if(z<=3)
	{
		printf("if else z=3.",z);
		z = 4;
	}
	else if(z != 123)
	{
		printf("if else  z !=123",z);
	}
	else 
	{
		printf("if else z is 123",z);
	}
	return ;

}
char testcom(char temp){
	if(temp<'a')
        printf("ascii smaller than a");
    else
        printf("ascii not smaller than a");
    if(temp<='a')
        printf("ascii smaller than a or equal to a");
    else
        printf("ascii bigger than a");
    if(temp=='a')
        printf("ascii equal to a");
    else
        printf("ascii not equal to a");
    if(temp>='a')
        printf("ascii bigger than a or equal to a");
    else 
        printf("ascii smaller than a");
    if(temp>'a')
        printf("ascii bigger than a");
    else
        printf("ascii not bigger than a");
    return (temp);
}

void error_ha
{


	Z = 0;
	aRr_z[1] = z + 1;
	arr_Z[2] = Z + 2;
	z = Z + 1; 


}
void main()
{

	const char cstin_main='x';
	int  varin_main,arrin_main[19];
        int a[2];
	x = +32 - -81;
	a[x] = 00213 - -00982;
	varin_main = x + -0001 - -000;

	y = +000;

	do
	{

		y = y + 1;
		arr_y[y] = y * -10 - -010 + 06 / 03;
		arr_y[y-1] = arr_y[y] +  +010 - x;		

	}
	while(y + 0 - 0 > 3 + 02313 * -0)

	proc1;
	proc2(cstin_main,cst_ch1,cst_ch2);
	x = func2(x);	
	ch3 = func3(cst_ch1);
	printf(ch3);

	;
	printf("fab 4 is ",fabnac(4));

	scanf(z);
	switch_cas(z);

	error_ha;
	return ;

}

